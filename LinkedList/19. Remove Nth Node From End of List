Given a linked list, remove the n-th node from the end of list and return its head.

Example:

Given linked list: 1->2->3->4->5, and n = 2.

After removing the second node from the end, the linked list becomes 1->2->3->5.
Note:

Given n will always be valid.

Follow up:

Could you do this in one pass?
-------------------------------------------

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode removeNthFromEnd(ListNode head, int n) {
        ListNode p1=head;
        ListNode p2=head;
        ListNode prev=null;
        for(int i=0;i<n;i++){
            while(p2!=null){
                p2=p2.next;
                break;
            }
        }
        
        while(p2!=null){
            prev=p1;
            p1=p1.next;
            p2=p2.next;
        }
        if(prev==null) head = head.next;
        else prev.next = p1.next;
        return head;
    }
}
