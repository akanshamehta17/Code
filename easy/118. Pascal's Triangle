Given a non-negative integer numRows, generate the first numRows of Pascal's triangle.

In Pascal's triangle, each number is the sum of the two numbers directly above it.

Example:

Input: 5
Output:
[
     [1],
    [1,1],
   [1,2,1],
  [1,3,3,1],
 [1,4,6,4,1]
]

--------------------------------------------------------

class Solution {
    public List<List<Integer>> generate(int numRows) {
    
        List<List<Integer>> finalList = new ArrayList<List<Integer>>();
        if(numRows==0) return finalList;
        for(int i=0;i<numRows;i++){
            List<Integer> innerList = new ArrayList<Integer>();
            for(int j=0;j<=i;j++){
                 
                 if(i==0){
                     innerList.add(1);
                 }
                else{
                    int prev = j > 0 ? finalList.get(i-1).get(j-1) : 0;
                    int next = i > j ? finalList.get(i-1).get(j) : 0;
                    innerList.add(prev+next);
                }
                
                }
            finalList.add(innerList);
            }
        return finalList;
    }
}
